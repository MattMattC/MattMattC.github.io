{"version":3,"sources":["webpack:///./src/components/Article.js","webpack:///./src/pages/index.js"],"names":["Article","props","node","colorMode","useColorMode","colorText","light","dark","colorTextSmall","title","frontmatter","fields","slug","date","Intl","DateTimeFormat","year","month","day","format","Date","Box","key","pt","Flex","justifyContent","alignItems","Icon","name","size","mr","color","Text","as","fontSize","time_to_read","Heading","Link","LinkGatsby","to","categories","map","cat","index","BadgeByCat","mt","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","IndexPage","articles","data","allMarkdownRemark","edges","Fragment","length","Divider","borderColor"],"mappings":"2QAoGeA,EAvFC,SAAAC,GAAU,IACdC,EAASD,EAATC,KACAC,EAAcC,cAAdD,UACFE,EAAY,CAAEC,MAAO,WAAYC,KAAM,YACvCC,EAAiB,CAAEF,MAAO,WAAYC,KAAM,YAE5CE,EAAQP,EAAKQ,YAAYD,OAASP,EAAKS,OAAOC,KAG9CC,EAAO,IAAIC,KAAKC,eAAe,QAFvB,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAECC,OACnD,IAAIC,KAAKlB,EAAKQ,YAAYG,OAG9B,OACI,kBAACQ,EAAA,EAAD,CAAKC,IAAKpB,EAAKS,OAAOC,KAAMW,GAAI,GAC5B,gCACI,kBAACC,EAAA,EAAD,CAAMC,eAAe,iBACjB,kBAACD,EAAA,EAAD,CAAME,WAAW,UACb,kBAACC,EAAA,EAAD,CACIC,KAAK,WACLC,KAAK,OACLC,GAAG,IACHC,MAAOvB,EAAeL,KAE1B,kBAAC6B,EAAA,EAAD,CACIC,GAAG,QACHC,SAAS,KACTH,MAAOvB,EAAeL,IAErBU,IAGT,kBAACW,EAAA,EAAD,CAAME,WAAW,UACb,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,OACLC,GAAG,IACHC,MAAOvB,EAAeL,KAE1B,kBAAC6B,EAAA,EAAD,CACIC,GAAG,QACHC,SAAS,KACTH,MAAOvB,EAAeL,IAErBD,EAAKQ,YAAYyB,aALtB,UASR,kBAACC,EAAA,EAAD,CAASH,GAAG,KAAKC,SAAS,MAAMH,MAAO1B,EAAUF,IAC7C,kBAACkC,EAAA,EAAD,CAAMJ,GAAIK,OAAYC,GAAI,QAAUrC,EAAKS,OAAOC,MAC3CH,KAIb,kBAACe,EAAA,EAAD,KACKtB,EAAKQ,YAAY8B,WACZtC,EAAKQ,YAAY8B,WAAWC,KAAI,SAACC,EAAKC,GAAN,OAC5B,kBAACC,EAAA,EAAD,CAAYtB,IAAKqB,EAAOD,IAAKA,OAEjC,MAEV,kBAACV,EAAA,EAAD,CACIa,GAAG,IACHX,SAAS,KACTH,MA3Da,CAAEzB,MAAO,WAAYC,KAAM,YA2DhBJ,GACxB2C,wBAAyB,CACrBC,OAAQ7C,EAAKQ,YAAYsC,aAAe9C,EAAK+C,WAIrD,kBAACzB,EAAA,EAAD,CAAMC,eAAe,SACjB,kBAACO,EAAA,EAAD,CAAME,SAAS,MACX,kBAACG,EAAA,EAAD,CACIN,MAAO1B,EAAUF,GACjB8B,GAAIK,OACJC,GAAI,QAAUrC,EAAKS,OAAOC,MAH9B,sBCrFpB,0CAMA,IAiBasC,EAAS,aAiCPC,UAlDG,SAAAlD,GACd,IAAMmD,EAAWnD,EAAMoD,KAAKC,kBAAkBC,MAC9C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK9C,MAAM,SACV2C,EAASX,KAAI,WAAWE,GAAW,IAAnBzC,EAAkB,EAAlBA,KACb,OACI,kBAAC,IAAMsD,SAAP,CAAgBlC,IAAKqB,GACjB,kBAAC,EAAD,CAASrB,IAAKqB,EAAOzC,KAAMA,IAC1ByC,IAAUS,EAASK,OAAS,EAAI,kBAACC,EAAA,EAAD,CAASC,YAAY,aAAe","file":"component---src-pages-index-js-b8626399dc688ba3f954.js","sourcesContent":["import React from 'react';\nimport { Link as LinkGatsby } from 'gatsby';\nimport {\n    Box,\n    Text,\n    Heading,\n    useColorMode,\n    Link,\n    Icon,\n    Flex,\n} from '@chakra-ui/core';\nimport BadgeByCat from './BadgeByCat';\n\nconst Article = props => {\n    const { node } = props;\n    const { colorMode } = useColorMode();\n    const colorText = { light: 'teal.800', dark: 'gray.100' };\n    const colorTextSmall = { light: 'gray.500', dark: 'gray.300' };\n    const colorDescription = { light: 'gray.600', dark: 'gray.300' };\n    const title = node.frontmatter.title || node.fields.slug;\n    var options = { year: 'numeric', month: 'short', day: 'numeric' };\n\n    const date = new Intl.DateTimeFormat('fr-FR', options).format(\n        new Date(node.frontmatter.date)\n    );\n\n    return (\n        <Box key={node.fields.slug} pt={2}>\n            <header>\n                <Flex justifyContent=\"space-between\">\n                    <Flex alignItems=\"center\">\n                        <Icon\n                            name=\"calendar\"\n                            size=\"14px\"\n                            mr=\"2\"\n                            color={colorTextSmall[colorMode]}\n                        />\n                        <Text\n                            as=\"small\"\n                            fontSize=\"xs\"\n                            color={colorTextSmall[colorMode]}\n                        >\n                            {date}\n                        </Text>\n                    </Flex>\n                    <Flex alignItems=\"center\">\n                        <Icon\n                            name=\"time\"\n                            size=\"14px\"\n                            mr=\"2\"\n                            color={colorTextSmall[colorMode]}\n                        />\n                        <Text\n                            as=\"small\"\n                            fontSize=\"xs\"\n                            color={colorTextSmall[colorMode]}\n                        >\n                            {node.frontmatter.time_to_read} min\n                        </Text>\n                    </Flex>\n                </Flex>\n                <Heading as=\"h3\" fontSize=\"2xl\" color={colorText[colorMode]}>\n                    <Link as={LinkGatsby} to={'/blog' + node.fields.slug}>\n                        {title}\n                    </Link>\n                </Heading>\n            </header>\n            <Flex>\n                {node.frontmatter.categories\n                    ? node.frontmatter.categories.map((cat, index) => (\n                          <BadgeByCat key={index} cat={cat} />\n                      ))\n                    : null}\n            </Flex>\n            <Text\n                mt=\"2\"\n                fontSize=\"sm\"\n                color={colorDescription[colorMode]}\n                dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                }}\n            />\n\n            <Flex justifyContent=\"right\">\n                <Text fontSize=\"xs\">\n                    <Link\n                        color={colorText[colorMode]}\n                        as={LinkGatsby}\n                        to={'/blog' + node.fields.slug}\n                    >\n                        Lire l'article\n                    </Link>\n                </Text>\n            </Flex>\n        </Box>\n    );\n};\n\nArticle.propTypes = {};\n\nexport default Article;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { Divider } from '@chakra-ui/core';\nimport Article from '../components/Article';\n\nconst IndexPage = props => {\n    const articles = props.data.allMarkdownRemark.edges;\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            {articles.map(({ node }, index) => {\n                return (\n                    <React.Fragment key={index}>\n                        <Article key={index} node={node} />\n                        {index !== articles.length - 1 ? <Divider borderColor=\"teal.500\"/> : null}\n                    </React.Fragment>\n                );\n            })}\n        </Layout>\n    );\n};\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                        categories\n                        time_to_read\n                        # imageHead {\n                        #     childImageSharp {\n                        #         fluid(maxWidth: 800) {\n                        #             ...GatsbyImageSharpFluid\n                        #         }\n                        #     }\n                        # }\n                    }\n                }\n            }\n        }\n    }\n`;\nexport default IndexPage;\n"],"sourceRoot":""}