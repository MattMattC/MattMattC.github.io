{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/core/dist/es/ButtonGroup/index.js","webpack:///./src/components/ContentArticle.js","webpack:///./src/templates/blog-post.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_ref","size","variantColor","variant","isAttached","_ref$spacing","spacing","children","rest","clones","map","child","index","isFirst","isLast","count","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","props","_focus","boxShadow","zIndex","mr","roundedRight","roundedLeft","borderRight","rounded","Box","display","ContentArticle","post","previous","next","colorMode","useColorMode","colorText","light","dark","colorBorder","date","Intl","DateTimeFormat","year","month","day","format","Date","frontmatter","Text","color","as","fontSize","Link","LinkGatsby","to","Heading","title","categories","cat","BadgeByCat","Flex","justify","time_to_read","Icon","name","Divider","borderColor","ArticleContentFormatted","dangerouslySetInnerHTML","__html","html","fields","slug","rel","Button","BlogPostTemplate","data","markdownRemark","pageContext","description","excerpt","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-66217d2b39275ba2eb47.js","sourcesContent":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/** @jsx jsx */\n\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport Box from \"../Box\";\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var size = _ref.size,\n      variantColor = _ref.variantColor,\n      variant = _ref.variant,\n      isAttached = _ref.isAttached,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      children = _ref.children,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"size\", \"variantColor\", \"variant\", \"isAttached\", \"spacing\", \"children\"]);\n\n  var clones = Children.map(children, function (child, index) {\n    if (!isValidElement(child)) return;\n    var isFirst = index === 0;\n    var isLast = index === Children.count(children) - 1;\n    return cloneElement(child, _objectSpread({\n      size: size || child.props.size,\n      variantColor: child.props.variantColor || variantColor,\n      variant: child.props.variant || variant,\n      _focus: {\n        boxShadow: \"outline\",\n        zIndex: 1\n      }\n    }, !isLast && !isAttached && {\n      mr: spacing\n    }, {}, isFirst && isAttached && {\n      roundedRight: 0\n    }, {}, isLast && isAttached && {\n      roundedLeft: 0\n    }, {}, !isLast && isAttached && {\n      borderRight: 0\n    }, {}, !isFirst && !isLast && isAttached && {\n      rounded: 0\n    }));\n  });\n  return jsx(Box, _extends({\n    display: \"inline-block\"\n  }, rest), clones);\n};\n\nexport default ButtonGroup;","import React from 'react';\nimport {\n    useColorMode,\n    Button,\n    Box,\n    ButtonGroup,\n    Heading,\n    Text,\n    Divider,\n    Flex,\n    Icon,\n    Link,\n} from '@chakra-ui/core';\nimport { Link as LinkGatsby } from 'gatsby';\nimport BadgeByCat from '../components/BadgeByCat';\nimport ArticleContentFormatted from './ArticleContentFormatted';\n\nconst ContentArticle = props => {\n    const { post, previous, next } = props;\n    const { colorMode } = useColorMode();\n    const colorText = { light: 'teal.600', dark: 'gray.100' };\n    const smallText = { light: 'gray.500', dark: 'gray.100' };\n    const colorBorder = { light: 'teal.600', dark: 'gray.100' };\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\n\n    const date = new Intl.DateTimeFormat('fr-FR', options).format(\n        new Date(post.frontmatter.date)\n    );\n\n    return (\n        <Box>\n            <header>\n                <Text color={smallText[colorMode]} as=\"p\" fontSize=\"xs\">\n                    <Link as={LinkGatsby} to=\"/\">\n                        Retour\n                    </Link>\n                </Text>\n                <Heading color={colorText[colorMode]}>\n                    {post.frontmatter.title}\n                </Heading>\n                {post.frontmatter.categories.length > 0\n                    ? post.frontmatter.categories.map((cat, index) => (\n                          <BadgeByCat key={index} cat={cat} />\n                      ))\n                    : null}\n                <Flex justify=\"space-between\">\n                    <Text color={colorText[colorMode]} as=\"p\" fontSize=\"xs\">\n                        {date}\n                    </Text>\n                    {post.frontmatter.time_to_read ? (\n                        <Text color={colorText[colorMode]} as=\"p\" fontSize=\"xs\">\n                            <Icon name=\"time\" />\n                            {' ' + post.frontmatter.time_to_read + ' m'}\n                        </Text>\n                    ) : null}\n                </Flex>\n            </header>\n            <Divider borderColor={colorBorder[colorMode]} />\n            <ArticleContentFormatted>\n                 <Box as=\"section\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            </ArticleContentFormatted>\n            <Divider borderColor={colorBorder[colorMode]} />\n            <nav>\n                <ButtonGroup spacing={4}>\n                    {previous && (\n                        <Link\n                            as={LinkGatsby}\n                            to={'blog' + previous.fields.slug}\n                            rel=\"prev\"\n                        >\n                            <Button variantColor=\"teal\" variant=\"solid\">\n                                ← {previous.frontmatter.title}\n                            </Button>\n                        </Link>\n                    )}\n                    {next && (\n                        <Link\n                            as={LinkGatsby}\n                            to={'blog' + next.fields.slug}\n                            rel=\"next\"\n                        >\n                            <Button variantColor=\"teal\" variant=\"solid\">\n                                {next.frontmatter.title} →\n                            </Button>\n                        </Link>\n                    )}\n                </ButtonGroup>\n            </nav>\n        </Box>\n    );\n};\n\nexport default ContentArticle;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport ContentArticle from '../components/ContentArticle';\nconst BlogPostTemplate = props => {\n    const post = props.data.markdownRemark;\n    const { previous, next } = props.pageContext;\n\n    return (\n        <Layout>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <ContentArticle previous={previous} next={next} post={post} />\n        </Layout>\n    );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n                time_to_read\n                categories\n                # imageHead {\n                #     childImageSharp {\n                #         fluid(maxWidth: 800) {\n                #             ...GatsbyImageSharpFluid\n                #         }\n                #     }\n                # }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}